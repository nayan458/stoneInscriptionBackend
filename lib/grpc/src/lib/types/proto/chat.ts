// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.7
//   protoc               v6.31.1
// source: proto/chat.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export interface BoolResponse {
  success: boolean;
}

export interface ChatMessageDto {
  useId: string;
  message: string;
  timestamp: string;
  clientId: string;
}

export interface ConversationServiceClient {
  sendMessage(request: ChatMessageDto): Observable<BoolResponse>;
}

export interface ConversationServiceController {
  sendMessage(request: ChatMessageDto): Promise<BoolResponse> | Observable<BoolResponse> | BoolResponse;
}

export function ConversationServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["sendMessage"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("ConversationService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("ConversationService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const CONVERSATION_SERVICE_NAME = "ConversationService";
